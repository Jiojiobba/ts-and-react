[{"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\index.tsx":"1","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\reportWebVitals.ts":"2","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\App.tsx":"3","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\Hello.tsx":"4","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\LikeButton.tsx":"5","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\TitleUpdate.tsx":"6","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\MouseTracker.tsx":"7","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\hooks\\useMousePostion.tsx":"8","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\withLoader.tsx":"9","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\hooks\\useURLLoader.tsx":"10","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\LikeButtonUseref.tsx":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2689,"mtime":1609912591561,"results":"15","hashOfConfig":"13"},{"size":462,"mtime":1609912591628,"results":"16","hashOfConfig":"13"},{"size":1953,"mtime":1609911881199,"results":"17","hashOfConfig":"13"},{"size":911,"mtime":1609396695742,"results":"18","hashOfConfig":"13"},{"size":757,"mtime":1609399610325,"results":"19","hashOfConfig":"13"},{"size":722,"mtime":1609401241109,"results":"20","hashOfConfig":"13"},{"size":2217,"mtime":1609832355331,"results":"21","hashOfConfig":"13"},{"size":926,"mtime":1609833757957,"results":"22","hashOfConfig":"13"},{"size":2510,"mtime":1609842854164,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"10n8uw0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\index.tsx",[],["51","52"],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\reportWebVitals.ts",[],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\App.tsx",["53","54","55","56","57","58","59","60"],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\Hello.tsx",[],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\LikeButton.tsx",["61"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { ThemeContext } from '../App'\r\n//useContext是一个function，接受参数：已经创建的ThemeContext\r\nconst LikeButton :React.FC = ()=>{\r\n    const theme = useContext(ThemeContext)\r\n    console.log(theme)\r\n    const [like, setLike] = useState(0)//数组解析，此时typeInferance会使得like自动获得number的类型，setLike也只能传入number类型\r\n    //里面的值可以是数字、字符串、布尔值等等，但class里面的一定是对象\r\n    //useState返回值是个array，0是点赞此次数\r\n    //返回的第一个是当前state值，第二个是更新state的函数\r\n    //useState和class里面的this.state提供的功能完全一样\r\n    //一般在函数执行完退出后，变量就会消失，而state中的变量会被react保留\r\n    const [on, setOn] = useState(true)\r\n    //2.const [obj, setObj] = useState({like:0, on:true})\r\n    // onClick={()=>{setObj({like:obj.like+1})}}//错误，必须要\r\n    //onClick={()=>{setObj({like:obj.like+1}, on:!obj.on)}}写完,因为是替换整个对象值，不是里面的属性\r\n    \r\n return (\r\n        <>\r\n        <button onClick={()=>{setLike(like + 1)}}>\r\n            {like}👍\r\n        </button>\r\n        <button onClick={()=>{setOn(!on)}}>\r\n            {on ? 'ON' : 'OFF'}\r\n        </button>\r\n        </>\r\n    )\r\n    //把单独的state变量拆开，好处：把相关的逻辑抽取到自定义的hook变得更加容易，\r\n    //把所有state都放在同一个useState中调用，或者把每个字段都对应一个单独的useState进行调用\r\n    //把相关state组合到独立的state变量，组件会变得更加可读\r\n    //useState让在函数中添加state变成了可能\r\n    //useState其实是Functional tyle，它也支持泛型\r\n}\r\n\r\nexport default LikeButton","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\TitleUpdate.tsx",[],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\MouseTracker.tsx",[],["62","63"],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\hooks\\useMousePostion.tsx",["64","65"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst useMousePostion = () =>{\r\n    const [positions, setPositions] = useState({x:0, y:0});\r\n    useEffect(()=>{\r\n        console.log('开始useEffect',positions.x)\r\n\r\n        const updateMouse= (e: MouseEvent) =>{\r\n            console.log('updateMouse更新鼠标位置参数')\r\n            setPositions({x: e.clientX, y: e.clientY})\r\n        }\r\n        document.addEventListener('mousemove',updateMouse)\r\n\r\n        return () => {\r\n            console.log('remove effect')\r\n            document.removeEventListener('mousemove', updateMouse)\r\n        }\r\n    },[])\r\n    return positions\r\n}\r\nexport default useMousePostion\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\withLoader.tsx",[],"C:\\○前端学习\\React\\代码\\ts-and-react\\src\\hooks\\useURLLoader.tsx",["66","67"],"import { useState, useEffect } from 'react'\r\n//useState只是loading状态，useEffect在什么时候发送请求\r\nimport axios from 'axios'\r\n//加载什么样子的数据？url。在什么情况下要重新触发数据加载？deps默认为一个空数组\r\n const useURLLoader = (url: string , deps: any[] = [])=>{\r\n     //data：获得的数据。一开始设置为null，会使得data类型判断有误，会将data判断为null类型\r\n     //所以要显式的传递一下：useState<any>(null)\r\n     const [data, setData] = useState<any>(null)\r\n     const [loading, setLoading] = useState(false)\r\n     useEffect(()=>{\r\n         setLoading(true)\r\n         axios.get(url).then((result)=>{\r\n             setData(result.data)\r\n             setLoading(false)\r\n         })\r\n     },deps)\r\n     return [data, loading]\r\n     //开始发送请求,刚开始把loading设置为true表示正在加载\r\n }\r\n export default useURLLoader","C:\\○前端学习\\React\\代码\\ts-and-react\\src\\component\\LikeButtonUseref.tsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":16,"nodeType":"74","messageId":"75","endLine":1,"endColumn":24},{"ruleId":"72","severity":1,"message":"76","line":2,"column":8,"nodeType":"74","messageId":"75","endLine":2,"endColumn":12},{"ruleId":"72","severity":1,"message":"77","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":19},{"ruleId":"72","severity":1,"message":"78","line":7,"column":8,"nodeType":"74","messageId":"75","endLine":7,"endColumn":20},{"ruleId":"72","severity":1,"message":"79","line":8,"column":8,"nodeType":"74","messageId":"75","endLine":8,"endColumn":23},{"ruleId":"72","severity":1,"message":"80","line":9,"column":8,"nodeType":"74","messageId":"75","endLine":9,"endColumn":18},{"ruleId":"72","severity":1,"message":"81","line":10,"column":8,"nodeType":"74","messageId":"75","endLine":10,"endColumn":20},{"ruleId":"72","severity":1,"message":"82","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":24},{"ruleId":"72","severity":1,"message":"83","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"68","replacedBy":"84"},{"ruleId":"70","replacedBy":"85"},{"ruleId":"72","severity":1,"message":"86","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":18,"column":7,"nodeType":"89","endLine":18,"endColumn":9,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":16,"column":8,"nodeType":"74","endLine":16,"endColumn":12},{"ruleId":"87","severity":1,"message":"92","line":16,"column":8,"nodeType":"74","endLine":16,"endColumn":12,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'TitleUpdate' is defined but never used.","'MouseTracker' is defined but never used.","'useMousePostion' is defined but never used.","'withLoader' is defined but never used.","'useURLLoader' is defined but never used.","'LikeButtonUseref' is defined but never used.","'useEffect' is defined but never used.",["94"],["95"],"'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'positions.x'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [positions.x]",{"range":"102","text":"103"},"Update the dependencies array to be: [url]",{"range":"104","text":"105"},[594,596],"[positions.x]",[598,602],"[url]"]